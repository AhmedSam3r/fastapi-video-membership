from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
import pathlib
from cassandra.cqlengine import connection  # mkontsh wakhed baly mnha sa3tha khales w 2olt gabha mnen lol 

from . import config


# It will gives us the absolute of this file & we can
BASE_DIR = pathlib.Path(__file__).resolve().parent


# must be located relative to db.py
# in the course he named the folder unencrypted and the zip file as astradb.zip
CONNECT_BUNDLE = BASE_DIR / "connect_bundle" / \
    "secure-connect-video-membership-project.zip"

settings = config.get_settings()
ASTRADB_CLIENT_ID = settings.db_client_id
ASTRADB_CLIENT_SECRET = settings.db_client_secret



def testing_session(session):
    row = session.execute("select release_version from system.local").one()
    if row:
        print(row[0])
    else:
        print("An error occurred.")


def get_session():
    # This secure connect bundle is autogenerated when you download your SCB,
    # if yours is different update the file name below
    cloud_config = {
        'secure_connect_bundle': CONNECT_BUNDLE
    }

    # # This token JSON file is autogenerated when you download your token,
    # # if yours is different update the file name below (YES DIFFERENT)
    # with open("connect_bundle/config.json") as f:
    #     secrets = json.load(f)

    # CLIENT_ID = secrets["clientId"]
    # CLIENT_SECRET = secrets["secret"]

    auth_provider = PlainTextAuthProvider(ASTRADB_CLIENT_ID,
                                          ASTRADB_CLIENT_SECRET)
    cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
    session = cluster.connect()
    session_name = str(session)
    connection.register_connection(session_name, session=session)
    connection.set_default_connection(session_name)

    # testing_session(session)

    return session
